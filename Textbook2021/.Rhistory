abline(0,beta,col=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.1
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile")
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.1
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile")
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=3)
t <- seq(from=0,to=1,length=1000)
beta <- 0.1
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=3)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=3)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=0.2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE,xlim=c(0,beta*2),ylab=c(0,beta*2))
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE,xlim=c(0,beta*2),ylim=c(0,beta*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE,xlim=c(0,beta*2),ylim=c(0,beta*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
(X-beta)/X
t <- seq(from=0,to=1,length=1000)
beta <- 0.05
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE,xlim=c(0,beta*2),ylim=c(0,beta*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
(X-beta)/X
t <- seq(from=0,to=1,length=1000)
beta <- 0.05
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",asp=TRUE,xlim=c(0,beta^2*2),ylim=c(0,beta*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
(X-beta)/X
t <- seq(from=0,to=1,length=1000)
beta <- 0.05
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",xlim=c(0,beta^2*2),ylim=c(0,beta*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
(X-beta)/X
t <- seq(from=0,to=1,length=1000)
beta <- 0.05
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",xlim=c(0,beta*2),ylim=c(0,beta^2*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
(X-beta)/X
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",xlab="sorted p-values",ylab="quantile",xlim=c(0,beta*2),ylim=c(0,beta^2*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
betas <- seq(from=0,to=1,length=100)
fdrs <- betas - betas^2
plot(betas,fdrs,type="l",main="BH法のFDR",xlab="parameter beta",ylab="FDR")
points(betas,betas,type="l",col=2)
betas <- seq(from=0,to=0.6,length=100)
fdrs <- betas - betas^2
plot(betas,fdrs,type="l",main="BH法のFDR",xlab="parameter beta",ylab="FDR")
points(betas,betas,type="l",col=2)
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(Ns,cbind(t.bonferroni,t.FWER),type="l")
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(lot10(Ns),cbind(t.bonferroni,t.FWER),type="l")
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l")
Ns <- 1:10000
alpha <- 0.5
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l")
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
Ns <- 1:10000
alpha <- 0.5
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
Ns <- 1:10000
alpha <- 0.2
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),log10(cbind(t.bonferroni,t.FWER)),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
n.sample <- 100
n.feature <- 4
X <- matrix(rnorm(n.sample*n.feature),ncol=n.feature)
# Y はXを用いて適当に作った値とする
Y <- apply(sin(X),1,sum)
lm.out <- lm(phenotype ~ data)
lm.out <- lm(Y ~ X)
lm.out$coefficinets
lm.out <- lm(Y ~ X)
lm.out$coeff
lm.out <- lm(Y ~ X)
lm.out$coeffients
lm.out <- lm(Y ~ X)
lm.out$coeffient
lm.out <- lm(Y ~ X)
lm.out$coeffien
str(lm.out)
lm.out <- lm(Y ~ X)
lm.out$coefficients
help(lm)
lm.out <- lm(Y ~ X^4)
lm.out$coefficients
lm.out <- lm(Y ~ (X1+X2+X3+X4)^4
lm.out$coefficients
lm.out <- lm(Y ~ (X1+X2+X3+X4)^4)
n.sample <- 100
n.feature <- 4
X <- matrix(rnorm(n.sample*n.feature),ncol=n.feature)
# Y はXを用いて適当に作った値とする
Y <- apply(sin(X),1,sum)
data <- data.frame(Y,X)
head(data)
lm.out <- lm(Y~X1+X2+X3+X4,data=data)
lm.out$coefficients
n.sample <- 100
n.feature <- 4
X <- matrix(rnorm(n.sample*n.feature),ncol=n.feature)
# Y はXを用いて適当に作った値とする
Y <- apply(sin(X),1,sum)
my.data <- data.frame(Y,X)
lm.out <- lm(Y~X1+X2+X3+X4,data=my.data)
lm.out$coefficients
lm.out2 <- lm(Y~(X1+X2+X3+X4)^2,data=my.data)
lm.out2$coefficients
lm.out2 <- lm(Y~(X1+X2+X3+X4)^4,data=my.data)
lm.out2$coefficients
lm.out2 <- lm(Y~(X1+X2+X3+X4)^n.feature,data=my.data)
lm.out4 <- lm(Y~(X1+X2+X3+X4)^n.feature,data=my.data)
n.feature
lm.out4 <- lm(Y~(X1+X2+X3+X4)^4,data=my.data)
lm.out4$coefficients
??"k-means"
n.sample <- 1000
X <- rnorm(n.sample)
hist(X)
km <- kmeans(X,2)
str(km)
n.sample <- 1000
n.feature <- 2
X <- matrix(rnorm(n.sample * n.feature),ncol=n.feature)
hist(X[,1])
hist(X[,2])
plot(X,pch=20,xlab="X1",ylab="X2")
n.sample <- 1000
n.feature <- 2
X <- matrix(rnorm(n.sample * n.feature),ncol=n.feature)
hist(X[,1])
hist(X[,2])
plot(X,pch=20,xlab="X1",ylab="X2",asp=TRUE)
km <- kmeans(X,2)
plot(X,asp=TRUE,pch=20,col=km$cluster)
km <- kmeans(X,2)
plot(X,asp=TRUE,pch=20,asp=TRUE,col=km$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
km <- kmeans(X,2)
plot(X,asp=TRUE,pch=20,col=km$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data <- data.frame(cl=km$cluster,X)
head(my.data)
t.test(X1 ~ cl, data=my.data)
n.sampleA <- 500
n.sampleB <- 500
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,2),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 500
n.sampleB <- 500
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,2,2),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(XAB,2)
km2 <- kmeans(XAB,2)
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2.cluster,X.AB)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 500
n.sampleB <- 500
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1.5,1),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 50
n.sampleB <- 50
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1.5,1),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1.5,1),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,1),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,1.3),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,0.6),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,1.3),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,0.8),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,1.3),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,0.8),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,1,1.3),ncol=n.feature)
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1.3),ncol=n.feature)
XB[,1] <- XY[,1] + 1
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1.3),ncol=n.feature)
XB[,1] <- XB[,1] + 1
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1.3),ncol=n.feature)
XB[,1] <- XB[,1] + 2
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1),ncol=n.feature)
XB[,1] <- XB[,1] + 2
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1),ncol=n.feature)
XB[,1] <- XB[,1] + 1.2
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1),ncol=n.feature)
XB[,1] <- XB[,1] + 1
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
