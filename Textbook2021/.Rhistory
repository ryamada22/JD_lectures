K <- 2 * (LL2 - LL1)
p_LRtest <- pchisq(K,df=1,lower.tail=FALSE)
p.LR[i] <- p_LRtest
Ks[i] <- K
}
plot(p.t,p.LR)
plot(sort(p.t))
plot(sort(p.LR))
plot(ts,Ks)
n.iter <- 1000
p.t <- p.LR <- ts <- Ks <- rep(NA,n.iter)
for(i in 1:n.iter){
X1 <- rnorm(N1,m1,s1)
X2 <- rnorm(N2,m2,s2)
X <- c(X1,X2)
Cell <- c(rep(1,N1),rep(2,N2))
df <- data.frame(Cell,X)
# t-検定
t.out <- t.test(X ~ Cell, var.equal = FALSE,data=df)
p.t[i] <- t.out$p.value
ts[i] <- t.out$statistic
# LR-test
est_m_0 <- mean(X)
est_s_0 <- sd(X)
est_s_01 <- sqrt(sum(X1-est_m_0)^2)
est_s_02 <- sqrt(sum(X2-est_m_0)^2)
est_m_1 <- mean(X1)
est_s_1 <- sd(X1)
est_m_2 <- mean(X2)
est_s_2 <- sd(X2)
L1 <- dnorm(X,est_m_0,est_s_0)
LL1 <- sum(log(L1))
#L1_1 <- dnorm(X1,est_m_0,est_s_01)
#L1_2 <- dnorm(X2,est_m_0,est_s_02)
#LL1 <- sum(log(L1_1)) + sum(log(L1_2))
L2_1 <- dnorm(X1,est_m_1,est_s_1)
L2_2 <- dnorm(X2,est_m_2,est_s_2)
LL2 <- sum(log(L2_1)) + sum(log(L2_2))
K <- 2 * (LL2 - LL1)
p_LRtest <- pchisq(K,df=2,lower.tail=FALSE)
p.LR[i] <- p_LRtest
Ks[i] <- K
}
plot(p.t,p.LR)
n.iter <- 1000
p.t <- p.LR <- ts <- Ks <- rep(NA,n.iter)
for(i in 1:n.iter){
X1 <- rnorm(N1,m1,s1)
X2 <- rnorm(N2,m2,s2)
X <- c(X1,X2)
Cell <- c(rep(1,N1),rep(2,N2))
df <- data.frame(Cell,X)
# t-検定
t.out <- t.test(X ~ Cell, var.equal = FALSE,data=df)
p.t[i] <- t.out$p.value
ts[i] <- t.out$statistic
# LR-test
est_m_0 <- mean(X)
est_s_0 <- sd(X)
est_s_01 <- sqrt(sum(X1-est_m_0)^2)
est_s_02 <- sqrt(sum(X2-est_m_0)^2)
est_m_1 <- mean(X1)
est_s_1 <- sd(X1)
est_m_2 <- mean(X2)
est_s_2 <- sd(X2)
L1 <- dnorm(X,est_m_0,est_s_0)
LL1 <- sum(log(L1))
#L1_1 <- dnorm(X1,est_m_0,est_s_01)
#L1_2 <- dnorm(X2,est_m_0,est_s_02)
#LL1 <- sum(log(L1_1)) + sum(log(L1_2))
L2_1 <- dnorm(X1,est_m_1,est_s_1)
L2_2 <- dnorm(X2,est_m_2,est_s_2)
LL2 <- sum(log(L2_1)) + sum(log(L2_2))
K <- 2 * (LL2 - LL1)
p_LRtest <- pchisq(K,df=2,lower.tail=FALSE)
p.LR[i] <- p_LRtest
Ks[i] <- K
}
plot(p.t,p.LR)
plot(sort(p.t))
plot(sort(p.LR))
N <- 100
X <- rnorm(N,20,2)
a <- 2.3
b <- 4.5
Y <- a * X + b + rnorm(N,0,3)
plot(X,Y)
N <- 100
X <- rnorm(N,20,2)
a <- 2.3
b <- 4.5
Y <- a * X + b + rnorm(N,0,3)
plot(X,Y)
# 線形回帰
lm.out <- lm(Y~X)
lm.out$coefficients
# 線形回帰
lm.out <- lm(Y~X)
lm.out$coefficients
plot(X,Y,pch=20)
abline(lm.out$coefficients[1],lm.out$coefficients[2],col=2)
N <- 100
X <- rnorm(N,20,2)
a <- 2.3
b <- 4.5
Y <- a * X + b + rnorm(N,0,0.1)
plot(X,Y,pch=20)
# 線形回帰
lm.out <- lm(Y~X)
lm.out$coefficients
plot(X,Y,pch=20)
abline(lm.out$coefficients[1],lm.out$coefficients[2],col=2)
N <- 100
X <- rnorm(N,20,2)
a <- 2.3
b <- 4.5
Y <- a * X + b + rnorm(N,0,0.5)
plot(X,Y,pch=20)
# 線形回帰
lm.out <- lm(Y~X)
lm.out$coefficients
plot(X,Y,pch=20)
abline(lm.out$coefficients[1],lm.out$coefficients[2],col=2)
knitr::opts_chunk$set(echo = TRUE)
n.sample <- 100
n.feature <- 4
X <- matrix(rnorm(n.sample*n.feature),ncol=n.feature)
# Y はXを用いて適当に作った値とする
Y <- apply(sin(X),1,sum)
my.data <- data.frame(Y,X)
lm.out <- lm(Y~X1+X2+X3+X4,data=my.data)
lm.out$coefficients
lm.out2 <- lm(Y~(X1+X2+X3+X4)^2,data=my.data)
lm.out2$coefficients
lm.out4 <- lm(Y~(X1+X2+X3+X4)^4,data=my.data)
lm.out4$coefficients
N <- 25000
M <- 1000
K <- 60
km <- 12
tab <- matrix(c(km, K - km, M - km, (N-M)-(K-km)),byrow=TRUE,2,2)
print(tab)
f.test.out <- fisher.test(tab)
print(f.test.out)
# install.packages("umap")
# install.packages("iCellR")
library(umap)
library(iCellR) # single cell data set "demo.obj@raw.data"のため
install.packages("iCellR")
a
knitr::opts_chunk$set(echo = TRUE)
n.sample <- 100
n.feature <- 4
X <- matrix(rnorm(n.sample*n.feature),ncol=n.feature)
# Y はXを用いて適当に作った値とする
Y <- apply(sin(X),1,sum)
my.data <- data.frame(Y,X)
lm.out <- lm(Y~X1+X2+X3+X4,data=my.data)
lm.out$coefficients
lm.out2 <- lm(Y~(X1+X2+X3+X4)^2,data=my.data)
lm.out2$coefficients
lm.out4 <- lm(Y~(X1+X2+X3+X4)^4,data=my.data)
lm.out4$coefficients
N <- 25000
M <- 1000
K <- 60
km <- 12
tab <- matrix(c(km, K - km, M - km, (N-M)-(K-km)),byrow=TRUE,2,2)
print(tab)
f.test.out <- fisher.test(tab)
print(f.test.out)
# install.packages("umap")
# install.packages("iCellR")
library(umap)
library(iCellR) # single cell data set "demo.obj@raw.data"のため
data <- demo.obj@raw.data
custom.settings = umap.defaults
custom.settings$n_neighbors = 3
umap.out <- umap(data,config=custom.settings)
head(umap.out$layout)
plot(umap.out$layout,pch=20)
# 特定の遺伝子発現量の多寡で色塗りしてみる
# 色塗りの具合の見栄えのために、無意味な値変換をしているので、その点は無視してほしい
col <- data[,12]
col <- (col-min(col))/(max(col)-min(col))
col <- col^0.2
plot(umap.out$layout,pch=20,col=rgb(col,1-col,rep(1,length(col))))
custom.settings = umap.defaults
custom.settings$n_neighbors = 10
umap.out2 <- umap(data,config=custom.settings)
plot(umap.out2$layout,pch=20)
# 特定の遺伝子発現量の多寡で色塗りしてみる
# 色塗りの具合の見栄えのために、無意味な値変換をしているので、その点は無視してほしい
col <- data[,12]
col <- (col-min(col))/(max(col)-min(col))
col <- col^0.2
plot(umap.out2$layout,pch=20,col=rgb(col,1-col,rep(1,length(col))))
Ns <- 1:10000
alpha <- 0.05
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
Ns <- 1:10000
alpha <- 0.2
t.bonferroni <- alpha/Ns
t.FWER <- 1-(1-alpha)^(1/Ns)
matplot(log10(Ns),cbind(t.bonferroni,t.FWER),type="l",ylab="閾値",main="多重検定閾値と検定数の関係,BonferroniとFWER")
plot(t.bonferroni,t.FWER,xlab="Bonferroni閾値",ylab="FWER閾値",main="Bonferroni閾値とFWER閾値の違い",type="l")
abline(0,1,col=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",main="p値累積カーブとFDR閾値",xlab="sorted p-values",ylab="quantile",asp=TRUE)
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
t <- seq(from=0,to=1,length=1000)
beta <- 0.2
thres.x <- t
thres.y <- 1 * t
plot(thres.x,thres.y,type="l",main="p値累積カーブとFDR閾値(拡大図)",xlab="sorted p-values",ylab="quantile",xlim=c(0,beta*2),ylim=c(0,beta^2*2))
abline(v=c(0,1))
abline(h=c(0,1))
abline(0,beta,col=2)
segments(0,0,beta,0,col=4)
segments(beta,0,1,1,col=4)
X <- beta/(beta^2-beta+1)
Y <- beta^2/(beta^2-beta+1)
points(X,Y,pch=20,cex=2)
points(X,0,pch=20,cex=2)
points(beta,0,pch=20,cex=2)
abline(v=beta)
betas <- seq(from=0,to=0.6,length=100)
fdrs <- betas - betas^2
plot(betas,fdrs,type="l",main="BH法がFDRを近似する様子",xlab="parameter beta",ylab="FDR")
points(betas,betas,type="l",col=2)
n.sample <- 1000
n.feature <- 2
X <- matrix(rnorm(n.sample * n.feature),ncol=n.feature)
hist(X[,1])
hist(X[,2])
plot(X,pch=20,xlab="X1",ylab="X2",asp=TRUE)
km <- kmeans(X,2)
plot(X,asp=TRUE,pch=20,col=km$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data <- data.frame(cl=km$cluster,X)
head(my.data)
t.test(X1 ~ cl, data=my.data)
n.sampleA <- 100
n.sampleB <- 100
n.feature <- 2
XA <- matrix(rnorm(n.sampleA * n.feature,0,1),ncol=n.feature)
XB <- matrix(rnorm(n.sampleB * n.feature,0,1),ncol=n.feature)
XB[,1] <- XB[,1] + 1
AB.label <- c(rep(1,n.sampleA),rep(2,n.sampleB))
X.AB <- rbind(XA,XB)
plot(X.AB,asp=TRUE,pch=20,col=AB.label,xlab="X1",ylab="X2",main="２群の分布")
km2 <- kmeans(X.AB,2)
plot(X.AB,asp=TRUE,pch=20,col=km2$cluster,xlab="X1",ylab="X2",main = "Result of kmeans clustering (No. clusters = 2)")
my.data.original <- data.frame(cl=AB.label,X.AB)
t.test(X1 ~ cl, data=my.data.original)
my.data.kmeans <- data.frame(cl=km2$cluster,X.AB)
t.test(X1 ~ cl, data=my.data.kmeans)
N_MM <- 50
N_Mm <- 38
N_mm <- 12
N <- N_MM + N_Mm + N_mm # 100
N_M <- 2 * N_MM + N_Mm # 138
N_m <- N_Mm + 2 * N_mm # 62
Frac_M <- N_M / (2 * N) # 0.69
Frac_m <- N_m / (2 * N) # 0.31
Ex_N_MM <- Frac_M^2 * N # MM期待人数
Ex_N_Mm <- 2 * Frac_M * Frac_m * N # Mm期待人数
Ex_N_mm <- Frac_m^2 * N # mm期待人数
# カイ二乗値
chi2_ori <- (N_MM - Ex_N_MM)^2/Ex_N_MM + (N_Mm - Ex_N_Mm)^2/Ex_N_Mm + (N_mm - Ex_N_mm)^2/Ex_N_mm
print(chi2_ori)
# p値
p <- pchisq(chi2_ori,df=1,lower.tail=FALSE)
print(p)
n_iter <- 10000 # 繰り返し回数
# ごちゃまぜにしてペアを作って３遺伝子型の人数を求める
Mm <- c(rep(0,N_M),rep(1,N_m))
genotype_counts <- matrix(0,3,n_iter)
for(i in 1:n_iter){
shuffled <- matrix(sample(Mm),ncol=2)
g_type <- apply(shuffled,1,sum)
genotype_counts[1,i] <- length(which(g_type==0))
genotype_counts[2,i] <- length(which(g_type==1))
genotype_counts[3,i] <- length(which(g_type==2))
}
# カイ二乗値を計算する
chi2s <- rep(NA,n_iter)
for(i in 1:n_iter){
N_MM_ <- genotype_counts[1,i]
N_Mm_ <- genotype_counts[2,i]
N_mm_ <- genotype_counts[3,i]
chi2_ <- (N_MM_ - Ex_N_MM)^2/Ex_N_MM + (N_Mm_ - Ex_N_Mm)^2/Ex_N_Mm + (N_mm_ - Ex_N_mm)^2/Ex_N_mm
chi2s[i] <- chi2_
}
hist(chi2s,breaks=50,main="カイ二乗値の度数分布")
abline(v=chi2_ori,col=2)
rchi2s <- rchisq(n_iter,df=1)
plot(sort(chi2s),sort(rchi2s),pch=20,cex=1)
abline(0,1,col=2)
# 細胞数
N1 <- 50
N2 <- 60
# ２群の平均
m1 <- 20
m2 <- 20.5
# ２群の標準偏差
s1 <- 3
s2 <- 3.3
# データ生成
X1 <- rnorm(N1,m1,s1)
X2 <- rnorm(N2,m2,s2)
X <- c(X1,X2)
Cell <- c(rep(1,N1),rep(2,N2))
df <- data.frame(Cell,X)
# t-検定
t.test(X ~ Cell, var.equal = FALSE,data=df)
est_m_0 <- mean(X)
est_s_0 <- sd(X)
est_m_1 <- mean(X1)
est_s_1 <- sd(X1)
est_m_2 <- mean(X2)
est_s_2 <- sd(X2)
L1 <- dnorm(X,est_m_0,est_s_0)
LL1 <- sum(log(L1))
L2_1 <- dnorm(X1,est_m_1,est_s_1)
L2_2 <- dnorm(X2,est_m_2,est_s_2)
LL2 <- sum(log(L2_1)) + sum(log(L2_2))
K <- 2 * (LL2 - LL1)
print(K)
p_LRtest <- pchisq(K,df=2,lower.tail=FALSE)
p_LRtest
# 細胞数
N1 <- 50
N2 <- 60
# 帰無仮説では、２群の平均も分散も同じ
# ２群の平均
m1 <- 20
m2 <- 20
# ２群の標準偏差
s1 <- 3
s2 <- 3
n.iter <- 1000
p.t <- p.LR <- ts <- Ks <- rep(NA,n.iter)
for(i in 1:n.iter){
X1 <- rnorm(N1,m1,s1)
X2 <- rnorm(N2,m2,s2)
X <- c(X1,X2)
Cell <- c(rep(1,N1),rep(2,N2))
df <- data.frame(Cell,X)
# t-検定
t.out <- t.test(X ~ Cell, var.equal = FALSE,data=df)
p.t[i] <- t.out$p.value
ts[i] <- t.out$statistic
# LR-test
est_m_0 <- mean(X)
est_s_0 <- sd(X)
est_m_1 <- mean(X1)
est_s_1 <- sd(X1)
est_m_2 <- mean(X2)
est_s_2 <- sd(X2)
L1 <- dnorm(X,est_m_0,est_s_0)
LL1 <- sum(log(L1))
L2_1 <- dnorm(X1,est_m_1,est_s_1)
L2_2 <- dnorm(X2,est_m_2,est_s_2)
LL2 <- sum(log(L2_1)) + sum(log(L2_2))
K <- 2 * (LL2 - LL1)
p_LRtest <- pchisq(K,df=2,lower.tail=FALSE)
p.LR[i] <- p_LRtest
Ks[i] <- K
}
par(mfcol=c(1,2))
plot(sort(p.t))
plot(sort(p.LR))
par(mfcol=c(1,1))
plot(p.t,p.LR,pch=20,main="t-検定と尤度比検定のp-値の比較",xlab="t-検定のp-値",ylab="尤度比検定のp-値")
A <- c(49,42,9)
B <- c(36,48,16)
# 優性モデル
A.dom <- c(A[1]+A[2],A[3])
B.dom <- c(B[1]+B[2],B[3])
dom.table <- rbind(A.dom,B.dom)
print(dom.table)
chisq.test(dom.table)
# 劣性モデル
A.rec <- c(A[1],A[2]+A[3])
B.rec <- c(B[1],B[2]+B[3])
rec.table <- rbind(A.rec,B.rec)
print(rec.table)
chisq.test(rec.table)
# 相加モデル
S <- A + B # ２群の和
prop.trend.test(A,S,c(0,1,2))
help(prop.trend.test)
# 優性
prop.trend.test(A,S,score=c(1,1,0))
#劣性
prop.trend.test(A,S,score=c(1,0,0))
A <- c(49,42,9)
B <- c(36,48,16)
# 優性モデル
A.dom <- c(A[1]+A[2],A[3])
B.dom <- c(B[1]+B[2],B[3])
dom.table <- rbind(A.dom,B.dom)
print(dom.table)
chisq.test(dom.table,correct=FALSE)
# 劣性モデル
A.rec <- c(A[1],A[2]+A[3])
B.rec <- c(B[1],B[2]+B[3])
rec.table <- rbind(A.rec,B.rec,correct=FALSE)
print(rec.table)
chisq.test(rec.table)
A <- c(49,42,9)
B <- c(36,48,16)
# 優性モデル
A.dom <- c(A[1]+A[2],A[3])
B.dom <- c(B[1]+B[2],B[3])
dom.table <- rbind(A.dom,B.dom)
print(dom.table)
chisq.test(dom.table,correct=FALSE)
# 劣性モデル
A.rec <- c(A[1],A[2]+A[3])
B.rec <- c(B[1],B[2]+B[3])
rec.table <- rbind(A.rec,B.rec)
print(rec.table)
chisq.test(rec.table,correct=FALSE)
chisq.test(dom.table,correct=FALSE)
f.null <- (A[1]+A[2]+B[1]+B[2])/(sum(A)+sum(B))
f.A <- (A[1]+A[2])/sum(A)
f.B <- (B[1]+B[2])/sum(B)
# 組み合わせ項はキャンセルされるので計算に入れないで対数尤度を計算する
logL.null <- (A[1]+A[2]+B[1]+B[2])*log(f.null) + (A[3]+B[3])*log(1-f.null)
logL.alt <- (A[1]+A[2])*log(f.A) + A[3]*log(1-f.A) + (B[1]+B[2])*log(f.B) + B[3] * log(1-f.B)
chi_LR <- 2 * (log.alt - log.null)
f.null <- (A[1]+A[2]+B[1]+B[2])/(sum(A)+sum(B))
f.A <- (A[1]+A[2])/sum(A)
f.B <- (B[1]+B[2])/sum(B)
# 組み合わせ項はキャンセルされるので計算に入れないで対数尤度を計算する
logL.null <- (A[1]+A[2]+B[1]+B[2])*log(f.null) + (A[3]+B[3])*log(1-f.null)
logL.alt <- (A[1]+A[2])*log(f.A) + A[3]*log(1-f.A) + (B[1]+B[2])*log(f.B) + B[3] * log(1-f.B)
chi_LR <- 2 * (logL.alt - logL.null)
print(chi_LR)
p_LR <- pchisq(chi_LR,df=1,lower.tail=TRUE)
chisq.test(dom.table,correct=FALSE)
f.null <- (A[1]+A[2]+B[1]+B[2])/(sum(A)+sum(B))
f.A <- (A[1]+A[2])/sum(A)
f.B <- (B[1]+B[2])/sum(B)
# 組み合わせ項はキャンセルされるので計算に入れないで対数尤度を計算する
logL.null <- (A[1]+A[2]+B[1]+B[2])*log(f.null) + (A[3]+B[3])*log(1-f.null)
logL.alt <- (A[1]+A[2])*log(f.A) + A[3]*log(1-f.A) + (B[1]+B[2])*log(f.B) + B[3] * log(1-f.B)
chi_LR <- 2 * (logL.alt - logL.null)
print("statistics of LR")
print(chi_LR)
p_LR <- pchisq(chi_LR,df=1,lower.tail=TRUE)
print("p-value")
print(p_LR)
chisq.test(dom.table,correct=FALSE)
f.null <- (A[1]+A[2]+B[1]+B[2])/(sum(A)+sum(B))
f.A <- (A[1]+A[2])/sum(A)
f.B <- (B[1]+B[2])/sum(B)
# 組み合わせ項はキャンセルされるので計算に入れないで対数尤度を計算する
logL.null <- (A[1]+A[2]+B[1]+B[2])*log(f.null) + (A[3]+B[3])*log(1-f.null)
logL.alt <- (A[1]+A[2])*log(f.A) + A[3]*log(1-f.A) + (B[1]+B[2])*log(f.B) + B[3] * log(1-f.B)
chi_LR <- 2 * (logL.alt - logL.null)
print("statistics of LR")
print(chi_LR)
p_LR <- pchisq(chi_LR,df=1,lower.tail=FALSE)
print("p-value")
print(p_LR)
chisq.test(dom.table,correct=FALSE)
n.iter <- 1000
p.chisq <- p.LR <- rep(NA,n.iter)
for(i in 1:n.iter){
tab <- matrix(sample(10:30,4,replace=TRUE),2,2)
chisq.out <- chisq.test(tab,correct=FALSE)
p.chisq[i] <- chisq.out$p.value
f.null <- (tab[1,1]+tab[2,1])/sum(tab)
f.A <- tab[1,1]/(tab[1,1]+tab[1,2])
f.B <- tab[2,1]/(tab[2,1]+tab[2,2])
logL.null <- (tab[1,1]+tab[2,1]) * log(f.null) + (tab[1,2]+tab[2,2]) * log(1-f.null)
logL.alt <- tab[1,1]*log(f.A) + tab[1,2] * log(1-f.A) + tab[2,1] * log(f.B) + tab[2,2] * log(1-f.B)
chi_LR <- 2 * (logL.alt - logL.null)
p.LR[i] <- pchisq(chi_LR,df=1,lower.tail=FALSE)
}
plot(p.LR,p.chisq,main="カイ二乗検定と尤度比検定のp-値の比較",xlab="尤度比検定p-値",ylab="カイ二乗検定p-値")
n.iter <- 1000
p.chisq <- p.LR <- rep(NA,n.iter)
for(i in 1:n.iter){
tab <- matrix(sample(10:30,4,replace=TRUE),2,2)
chisq.out <- chisq.test(tab,correct=FALSE)
p.chisq[i] <- chisq.out$p.value
f.null <- (tab[1,1]+tab[2,1])/sum(tab)
f.A <- tab[1,1]/(tab[1,1]+tab[1,2])
f.B <- tab[2,1]/(tab[2,1]+tab[2,2])
logL.null <- (tab[1,1]+tab[2,1]) * log(f.null) + (tab[1,2]+tab[2,2]) * log(1-f.null)
logL.alt <- tab[1,1]*log(f.A) + tab[1,2] * log(1-f.A) + tab[2,1] * log(f.B) + tab[2,2] * log(1-f.B)
chi_LR <- 2 * (logL.alt - logL.null)
p.LR[i] <- pchisq(chi_LR,df=1,lower.tail=FALSE)
}
plot(p.LR,p.chisq,pch=20,cex=0.1,main="カイ二乗検定と尤度比検定のp-値の比較",xlab="尤度比検定p-値",ylab="カイ二乗検定p-値")
