library(igraph)
edge.list <- rbind(c(1,2),c(2,3),c(3,4),c(4,1))
edge.list
g1 <- graph.edgelist(edge.list, directed = FALSE) # undirected graph
plot(g1)
neighbors(g1,2)
adjacent_vertices(g1,2)
incident_edges(g1,2)
adj <- matrix(0,4,4) # 4: no. vertices
adj[1,2] <- adj[2,1] <- adj[2,3] <- adj[3,2] <- adj[3,4] <- adj[4,3] <- adj[4,1] <- adj[1,4] <- 1
adj
g2 <- graph.adjacency(adj,mode="undirected")
plot(g2)
degree(g2,3)
degree(g2)
sum(adj[3,])
apply(adj,1,sum)
E(g1)
V(g1)
length(E(g1))
length(V(g1))
all_simple_paths(g1,4,2)
shortest_paths(g1,4,2,output="both")
all_shortest_paths(g1,4)
distances(g1,4,2) # distance from V4 to V2
distances(g1) # distances of all vertex-pairs
subg <- induced_subgraph(g2, c(1,2,3))
plot(subg)
g3 <- sample_k_regular(20,3)
plot(g3)
degree(g3)
el <- rbind(c(1,2),c(2,3),c(3,4),c(4,1),c(1,3))
g.planar <- graph.edgelist(el,directed=FALSE)
plot(g.planar)
library(RBGL)
# convert igraph object to RBGL object
#g.RBGL <- igraph.to.graphNEL(as.undirected(g.tetra))
g.RBGL <- as_graphnel(g.pyramid)
# convert igraph object to RBGL object
#g.RBGL <- igraph.to.graphNEL(as.undirected(g.planar))
g.RBGL <- as_graphnel(g.planar)
# Test whether or not planar
boyerMyrvoldPlanarityTest(g.RBGL)
x.nocross <- chrobakPayneStraightLineDrawing(g.RBGL)
plot(g.planar, layout = t(x.nocross))
g.dual <-  makeBiconnectedPlanar(g.RBGL)
g.dual. <- g.dual[[2]]
g.dual.igraph <- igraph.from.graphNEL(g.dual.)
x.nocross.dual <- chrobakPayneStraightLineDrawing(g.dual.)
plot(g.dual.igraph,layout = x.nocross.dual)
g.dual <-  makeBiconnectedPlanar(g.RBGL)
g.dual. <- g.dual[[2]]
g.dual.igraph <- igraph.from.graphNEL(g.dual.)
x.nocross.dual <- chrobakPayneStraightLineDrawing(g.dual.)
plot(g.dual.igraph,layout = t(x.nocross.dual))
str(g.dual)
help(makeBiconnectedPlanar)
el.dual <- rbind(c(1,2),c(1,3),c(2,3))
g.dual <- graph.edgelist(el.dual,directed=FALSE)
plot(g.dual)
el.dual <- rbind(c(1,2),c(1,3),c(1,3),c(2,3),c(2,3))
g.dual <- graph.edgelist(el.dual,directed=FALSE)
plot(g.dual)
knitr::opts_chunk$set(echo = TRUE)
el <- rbind(c(1,2),c(1,3),c(2,4),c(2,5),c(3,6),c(3,7),c(4,8),c(4,9),c(5,10),c(5,11),c(6,12),c(6,13),c(7,14),c(7,15))
g.bt <- graph.edgelist(el,directed=TRUE)
plot(g.bt)
g.dist <- distances(g.bt)
g.dist
help(distanes)
help(distances)
distance_table(g.bt)
el <- rbind(c(1,2),c(1,3),c(2,4),c(2,5),c(3,6),c(3,7),c(4,8),c(4,9),c(5,10),c(5,11),c(6,12),c(6,13),c(7,14),c(7,15))
g.bt <- graph.edgelist(el,directed=TRUE,mode="out")
g.dist <- distances(g.bt,mode="out")
g.dist
g.dist <- distances(g.bt,mode="out")
g.dist
apply(g.dist,1,sum)
adj.bt <- get.adjacancy(g.bt)
adj.bt <- get.adjacency(g.bt)
adj.bt
is.symmetric(adj.bt)
adj.bt - t(adj.bt)
adj.bt - t(adj.bt)
range(adj.bt - t(adj.bt))
adj.unrooted <- adj.bt + t(adj.bt)
adj.unrooted
range(adj.unrooted - t(adj.unrooted))
g.bt.unroot <- graph.adjacency(adj.unrooted)
plot(g.bt.unroot)
g.bt.unroot <- graph.adjacency(adj.unrooted, mode="undirected")
plot(g.bt.unroot)
